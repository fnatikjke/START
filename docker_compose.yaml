services:
  bot_image:
    container_name: "bot_image"
    image: "bot_image:latest"
    restart: unless-stopped
    environment:
      TOKEN: ${TOKEN}
      RM_HOST: ${RM_HOST}
      RM_PORT: ${RM_PORT}
      RM_USER: ${RM_USER}
      RM_PASSWORD: ${RM_PASSWORD}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      
  db_image:
    container_name: "db_image"
    image: "db_image:latest"
    user: ${DB_USER}
    restart: always
    ports:
      - ${DB_PORT}:5432
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
      PGDATA: "/var/lib/postgresql/data/pgdata_main"
    command: |
      postgres
      -c wal_level=replica
      -c hot_standby=on
      -c max_wal_senders=10
      -c max_replication_slots=10
      -c hot_standby_feedback=on
      -c log_replication_commands=on
      -c log_statement=all
      -c wal_log_hints=on
    volumes:
      - pgdata_main:/var/lib/postgresql/data
    healthcheck:
      test: 'pg_isready -U postgres --dbname=arkh_test'
      interval: 10s
      timeout: 5s
      retries: 5

  db_repl_image:
    container_name: "db_repl_image"
    image: "db_repl_image:latest"
    user: postgres
    restart: always
    ports:
      - 5433:5432
    environment:
      PGUSER: ${DB_REPL_USER}
      PGPASSWORD: ${DB_REPL_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata_repl"
    command: |
      bash -c "
      until pg_basebackup --pgdata=/var/lib/postgresql/data/pgdata_repl -R --slot=repl_slot --host=${DB_REPL_HOST} --port=${DB_REPL_PORT}
      do
      echo 'Waiting for primary to connect...'
      sleep 1s
      done
      echo 'Backup done, starting replica...'
      chmod 0700 /var/lib/postgresql/data
      postgres
      "
    volumes:
      - pgdata_repl:/var/lib/postgresql/data
    depends_on:
      - db_image

volumes:
  pgdata_main:
  pgdata_repl:
